class Solution {
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean[] visited = new boolean[V];
    
        for (int i = 0; i < V; i++) {
            if (!visited[i]) {
                if (dfscycle(adj, i, -1, visited)) {
                    return true;
                }
            }
        }
        
        return false;
    }
    
        public boolean dfscycle(ArrayList<ArrayList<Integer>> graph, int S, int parent, boolean[] visited,{
        visited[S] = true;
        ArrayList<Integer> nbrlist = graph.get(S);
        
        for (int nbr : nbrlist) {
            if (!visited[nbr]) {
                if (dfscycle(graph, nbr, S, visited)) {
                    return true;
                }
            } else if (nbr != parent) {
                return true;
            }
        }
        
        return false;
    }
}
